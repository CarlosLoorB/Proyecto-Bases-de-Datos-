-- 1.- seleccioanr un paciente 
SELECT * 
FROM PACIENTE
WHERE USUARIO LIKE "CARLOSLOOR";
 -- 2.- MOSTRAR BUSQUEDA DIARIO SI
 DROP PROCEDURE IF EXISTS VER_DIARIO;
DELIMITER // 
CREATE PROCEDURE VER_DIARIO (IN USUARIO VARCHAR(15))
BEGIN
 select d.diario_id, d.id_paciente, d.usuario_esp
 from paciente p, diario d
 where p.usuario=d.id_paciente and p.usuario like USUARIO;
 END // 
 DELIMITER;
 
call procedure 
 -- 3.- MOSTRAR BUSQUEDA ENTRADA_DIARIO SI si sirve
DROP PROCEDURE IF EXISTS VER_ENTRADA_DIARIO;
DELIMITER // 
CREATE PROCEDURE VER_ENTRADA_DIARIO (IN USUARIO VARCHAR(15), IN CODIGO INT)
BEGIN
 select ed.entrada_id, ed.fechahora,ed.nota,ed.diario_id,ed.emocion_id
 from paciente p, diario d, entrada_diario ed
 where p.usuario=d.id_paciente AND d.diario_id=ed.diario_id and p.usuario like USUARIO and ed.entrada_id = CODIGO;
 END //
 DELIMITER ; 
-- 4.- MOSTRAR EMOCION INGRESADA DE DIARIO si sirve
DROP PROCEDURE IF EXISTS VER_EMOCIONES_DIARIO;
DELIMITER // 
CREATE PROCEDURE VER_EMOCIONES_DIARIO (IN USUARIO VARCHAR(15) )
BEGIN
select ed.NOTA, e.emocion_id, e.emocion
 from paciente p, diario d, entrada_diario ed, emocion e
 where p.usuario=d.id_paciente AND d.diario_id=ed.diario_id and ed.emocion_id=e.emocion_id and p.usuario like USUARIO;
 END // 
 DELIMITER ;
-- 5.- MOSTRAR BUSQUEDA ESPECIALISTA
select e.usuario_esp,e.contrasena,e.especialidad,e.dispurg,e.numertotelefono,e.correo,e.nombre,e.apellido
from paciente p, diario d, especialista e
where p.usuario=d.id_paciente AND d.usuario_esp=e.usuario_esp and p.usuario like "carlosloor";
-- 6.- MOSTRAR BUSQUEDA ESPECIALISTA DISPONIBLE
select ep.horario, ep.disponible, ep.usuario_esp
from paciente p, diario d, especialista e, esp_disponible ep
where p.usuario=d.id_paciente AND d.usuario_esp=e.usuario_esp and e.usuario_esp=ep.usuario_esp and p.usuario like "carlosloor";
-- 7.- MOSTRAR CARACTERISTICA PACIENTE
select c.caracteristica_id, c.caracteristica,c.usua
from paciente p, caracteristica c
where p.usuario=c.usua and p.usuario like "carlosloor";
-- 8.-  MOSTRAR RESEÑA/PACIENTE
select r.id_resena, r.comentario,r.caracteristica,r.usu,r.usu_esp,r.id_cita
from paciente p, resena r
where p.usuario=r.usu and p.usuario like "carlosloor";
-- 9.- MOSTRAR CITA/PACIENTE
select c.id_cita, c.diagnostico, c.precio,c.fecha_hora,c.estado,c.usua,c.usua_esp
from paciente p, cita c
where p.usuario and c.usua and p.usuario like "carlosloor";
-- 10.- MOSTRAR LOS HORARIOS DISPONIBLE CON CIERTO ESPECISLISTA SI si sirve
DROP PROCEDURE IF EXISTS VER_HORARIOS;
DELIMITER // 
CREATE PROCEDURE VER_HORARIOS (IN NUMERO_ESP INT) 
BEGIN
SELECT E.NOMBRE , ED.HORARIO
FROM ESPECIALISTA E, ESP_DISPONIBLE ED
WHERE E.USUARIO_ESP = ED.USUARIO_ESP 
AND E.USUARIO_ESP = NUMERO_ESP;
END //
DELIMITER ;

CALL VER_HORARIOS (12345685);

-- 11.- AGENDAR CITA CON CIERTO ESPECISLISTA SI  si sirve
DROP PROCEDURE IF EXISTS AGENDAR_CITA;
DELIMITER //
CREATE PROCEDURE AGENDAR_CITA (IN NUMERO_ESP INT,IN FECHA DATETIME)
BEGIN 
UPDATE ESP_DISPONIBLE
  SET DISPONIBLE = FALSE 
  WHERE HORARIO = FECHA 
  AND USUARIO_ESP = NUMERO_ESP;
END //
DELIMITER ; 

-- 12.-  CREAR UNA RESENA si sirve
DROP PROCEDURE IF EXISTS CREAR_RESENA;
DELIMITER //
CREATE PROCEDURE CREAR_RESENA (IN NUMERO_RES INT,IN COMENTARIOS VARCHAR(500),IN CALIFICACION INT,IN PACIENTE VARCHAR(15), IN ESP INT, IN CITA INT)
BEGIN 
INSERT INTO RESENA VALUES (NUMERO_RES, COMENTARIOS, CALIFICACION, PACIENTE , ESP, CITA);
END // 
DELIMITER ; 

 -- 13.- Se comienza una consulta urgente SI si sirve
 DROP PROCEDURE IF EXISTS COMENZAR_URGENTE;
DELIMITER //
CREATE PROCEDURE COMENZAR_URGENTE (IN USUARIO_ESPEC INT)
BEGIN 
IF (SELECT DISPURG FROM ESPECIALISTA WHERE USUARIO_ESP = USUARIO_ESPEC) THEN
UPDATE ESPECIALISTA 
 SET DISPURG = 0
 WHERE USUARIO_ESP = USUARIO_ESPEC ;
 end if;
END // 
DELIMITER ; 

-- 14.- Se FINALIZA una consulta urgente SI si sirve
 DROP PROCEDURE IF EXISTS FINALIZAR_URGENTE;
DELIMITER //
CREATE PROCEDURE FINALIZAR_URGENTE (IN USUARIO_ESP INT)
BEGIN 
UPDATE ESPECIALISTA 
 SET DISPURG = 1;
END // 
DELIMITER ; 

 -- 15.- CREAR PACIENTE SI si sirve
 DROP PROCEDURE IF EXISTS CREAR_PACIENTE ;
DELIMITER //
CREATE PROCEDURE CREAR_PACIENTE (IN USUARIO VARCHAR(15), IN NOMBRE VARCHAR(15), IN APELLIDO VARCHAR(15), IN NUMCEDULA VARCHAR(15), IN FECHANACIMIENTO DATE, IN ESTADOCIVIL VARCHAR(15), IN CORREOELECTRONICO VARCHAR(45), IN CONTRASENA VARCHAR(15) )
BEGIN 
INSERT INTO PACIENTE VALUES (USUARIO,NOMBRE,APELLIDO,NUMCEDULA,FECHANACIMIENTO,ESTADOCIVIL,CORREOELECTRONICO,CONTRASENA);
END // 
DELIMITER ; 

-- 16.- CREAR ENTRADA DIARIO SI si sirve
DROP PROCEDURE IF EXISTS CREAR_ENTRADA_DIARIO ;
DELIMITER //
CREATE PROCEDURE CREAR_ENTRADA_DIARIO ( IN FECHAHORA DATETIME, IN NOTA VARCHAR(200), IN DIARIO_ID INT, IN EMOCION_ID INT)
BEGIN 
INSERT INTO ENTRADA_DIARIO(FECHAHORA,NOTA,DIARIO_ID,EMOCION_ID) VALUES (FECHAHORA,NOTA,DIARIO_ID,EMOCION_ID);
END // 
DELIMITER ; 

-- 17.- MODIFICAR USUARIO SI sir sirve
DROP PROCEDURE IF EXISTS MOD_PACIENTE ;
DELIMITER //
CREATE PROCEDURE MOD_PACIENTE (IN USUARIOP VARCHAR(15), IN NOMBREP VARCHAR(15), IN APELLIDOP VARCHAR(15), IN NUMCEDULAP VARCHAR(15), IN FECHANACIMIENTOP DATE, IN ESTADOCIVILP VARCHAR(15), IN CORREOELECTRONICOP VARCHAR(45), IN CONTRASENAP VARCHAR(15) )
BEGIN 
UPDATE PACIENTE 
SET  NOMBRE = NOMBREP, APELLIDO = APELLIDOP, NUMCEDULA = NUMCEDULAP, FECHANACIMIENTO =FECHANACIMIENTOP, ESTADOCIVIL= ESTADOCIVILP, CORREOELECTRONICO = CORREOELECTRONICOP, CONTRASENA = CONTRASENAP
WHERE USUARIO = USUARIOP;
END // 
DELIMITER ; 

-- 18.- DESAGENDAR CITA CON CIERTO ESPECISLISTA SI si sirve
DROP PROCEDURE IF EXISTS DESAGENDAR_CITA;
DELIMITER //
CREATE PROCEDURE DESAGENDAR_CITA (IN NUMERO_ESP INT,IN FECHA DATETIME)
BEGIN 
UPDATE ESP_DISPONIBLE
  SET DISPONIBLE = TRUE 
  WHERE HORARIO = FECHA 
  AND USUARIO_ESP = NUMERO_ESP;
END //
DELIMITER ; 

-- 19.-  ELIMINAR PACIENTE SI si sirve
 DROP PROCEDURE IF EXISTS ELIMINAR_PACIENTE ;
DELIMITER //
CREATE PROCEDURE ELIMINAR_PACIENTE (IN USUARIOP VARCHAR(15))
BEGIN 
DELETE FROM PACIENTE WHERE USUARIO = USUARIOP;
END // 
DELIMITER ; 

-- 20.- CREAR ESPECIALISTA  si sirve
DROP PROCEDURE IF EXISTS CREAR_ESP ;
DELIMITER //
CREATE PROCEDURE CREAR_ESP ( IN USUARIO_ESP INT, IN CONTRASENA VARCHAR(20), IN ESPECIALIDAD VARCHAR(30), IN DISPURGP BOOLEAN, IN NUMERTOTELEFONO VARCHAR(15), IN CORREO VARCHAR(30), IN NOMBRE VARCHAR(15),IN APELLIDO VARCHAR(15), IN CALIFICACION DOUBLE, IN NUM_RESENAS INT)
BEGIN 
INSERT INTO ESPECIALISTA VALUES(USUARIO_ESP, CONTRASENA,ESPECIALIDAD,DISPURGP, NUMERTOTELEFONO,CORREO,NOMBRE,APELLIDO,CALIFICACION,NUM_RESENAS); 
END // 
DELIMITER ; 

-- 21.- CREAR CITA si sirve
DROP PROCEDURE IF EXISTS CREAR_CITA ;
DELIMITER //
CREATE PROCEDURE CREAR_CITA (IN ID_CITAP INT, IN DIAGNOSTICOP VARCHAR(500), IN PRECIOP INT, IN FECHA_HORAP DATETIME, IN ESTADOP BOOLEAN, IN USUA VARCHAR(15), IN USUA_ESP INT)
BEGIN 
INSERT INTO CITA VALUES (ID_CITAP,DIAGNOSTICOP, PRECIOP, FECHA_HORAP, ESTADOP, USUA, USUA_ESP);
END // 
DELIMITER ;
 
-- 22.- modificar especialista si sirve 
DROP PROCEDURE IF EXISTS MOD_ESP ;
DELIMITER //
CREATE PROCEDURE MOD_ESP ( IN USUARIO_ESPP INT, IN CONTRASENAP VARCHAR(20), IN ESPECIALIDADP VARCHAR(30), IN DISPURGPP BOOLEAN, IN NUMERTOTELEFONOP VARCHAR(15), IN CORREOP VARCHAR(30), IN NOMBREP VARCHAR(15),IN APELLIDOP VARCHAR(15), IN CALIFICACIONP DOUBLE, IN NUM_RESENASP INT)
BEGIN 
UPDATE PACIENTE 
SET  USUARIO_ESP = USUARIO_ESPP, CONTRASENA = CONTRASENAP, ESPECIALIDAD = ESPECIALIDADP, DISPURG =DISPURGPP, NUMERTOTELEFONO= NUMERTOTELEFONOP, CORREO = CORREOP, NOMBRE = NOMBREP,APELLIDO = APELLIDOP ,CALIFICACION = CALIFICACIONP,NUM_RESENAS= NUM_RESENASP
WHERE USUARIO_ESP = USUARIO_ESPP;
END // 
DELIMITER ; 

-- 23.- eliminar especialista si sirve
DROP PROCEDURE IF EXISTS ELIM_ESP ;
DELIMITER //
CREATE PROCEDURE ELIM_ESP ( IN USUARIO_ESPP INT)
BEGIN 
DELETE FROM ESPECIALISTA 
WHERE USUARIO_ESP = USUARIO_ESPP;
END // 
DELIMITER ; 

-- 24.- modificar entrada diario si sirve
DROP PROCEDURE IF EXISTS MOD_ENTRADA_DIARIO ;
DELIMITER //
CREATE PROCEDURE MOD_ENTRADA_DIARIO ( IN ENTRADA_IDP INT, IN FECHAHORAP DATETIME, IN NOTAP VARCHAR(200), IN DIARIO_IDP INT, IN EMOCION_IDP INT)
BEGIN 
UPDATE ENTRADA_DIARIO 
SET FECHAHORA = FECHAHORAP,NOTA = NOTAP,DIARIO_ID = DIARIO_IDP,EMOCION_ID = EMOCION_IDP
WHERE ENTRADA_ID = ENTRADA_IDP;
END // 
DELIMITER ; 

-- 25.- mostras especialista y reseña si sirve
DROP PROCEDURE IF EXISTS MOSTRA_ESP_RES ;
DELIMITER //
CREATE PROCEDURE MOSTRA_ESP_RES ( )
BEGIN 
SELECT *
FROM especialistas_activos;
END // 
DELIMITER ; 

-- 26 ESPECIALISTAS DE URGENCIA si sirve
DROP PROCEDURE IF EXISTS MOSTRA_ESP_URG ;
DELIMITER //
CREATE PROCEDURE MOSTRA_ESP_URG ( )
BEGIN 
SELECT *
FROM ESP_URG;
END // 
DELIMITER ; 

-- 27.- ELIMINAR CITA si sirve 
DROP PROCEDURE IF EXISTS ELIM_CITA ;
DELIMITER //
CREATE PROCEDURE ELIM_CITA (IN ID_CITAP INT )
BEGIN 
DELETE FROM CITA 
WHERE ID_CITA = ID_CITAP ;
END // 
DELIMITER ; 

-- 28 MOSTRAR CITAS AGENDADAS si sirve
DROP PROCEDURE IF EXISTS MOSTRAR_CITA ;
DELIMITER //
CREATE PROCEDURE MOSTRAR_CITA (IN ID_USER INT )
BEGIN 
SELECT *
FROM citas_agendadas C
WHERE ID_USER = C.USUA;
END // 
DELIMITER ; 

-- 29 mostrar citas expiradas si sirve
DROP PROCEDURE IF EXISTS MOSTRAR_CITA_EXP ;
DELIMITER //
CREATE PROCEDURE MOSTRAR_CITA_EXP (IN ID_USER VARCHAR(15))
BEGIN 
SELECT FECHA_HORA, USUA_ESP, ESTADO
FROM cita C
WHERE ID_USER = C.USUA
AND ESTADO = FALSE;
END // 
DELIMITER ; 


-- 30 MOSTRAR CITAS POR MES 
DROP PROCEDURE IF EXISTS MOSTRAR_CITA_MES ;
DELIMITER //
CREATE PROCEDURE MOSTRAR_CITA_MES (IN ID_USER INT, IN MES DATETIME)
BEGIN 
SELECT FECHA_HORA, USUA_ESP
FROM cita
WHERE ID_USER = C.USUA
AND MOBNTH(FECHA_HORA) = MONTH(MES);
END // 
DELIMITER ; 



-- BUSQUEDA ESPECIFICA PACIENTE
select * from paciente where usuario like "jagarces";
select * from especialista where usuario_esp like 12345671;
select * from cita where id_cita like 2323;
select * from resena where id_resena like 0235671;
select * from diario where diario_id like 1231;
select * from emocion where emocion_id like 1;
select * from entrada_diario where fechahora like "2021-12-04 14:30:24";
select * from caracteristica where caracteristica_id like "12341";
select * from esp_disponible where horario like "2022-01-02 14:30:00";

DROP VIEW especialistas_activos

	